"0","# Panel Data Analysis"
"0","# Create a panel data set for the analysis"
"0","panel_data <- Data_monthly %>%"
"0","  select(`Occurrence State`, date, Deaths_per_100000) %>%"
"0","  mutate(State = factor(`Occurrence State`)) %>%"
"0","  select(-`Occurrence State`)"
"1","[38;5;232mAdding missing grouping variables: `year`[39m
"
"1","[38;5;232mAdding missing grouping variables: `Occurrence State`[39m
"
"0","# Aggregate the data to ensure unique state and date combinations"
"0","panel_data <- panel_data %>%"
"0","  group_by(State, date) %>%"
"0","  summarise(Deaths_per_100000 = sum(Deaths_per_100000, na.rm = TRUE)) %>%"
"0","  ungroup()"
"1","[38;5;232m`summarise()` has grouped output by 'State'. You can override using the `.groups`
argument.[39m
"
"0","# Convert the data to a pdata.frame"
"0","pdata <- pdata.frame(panel_data, index = c(""State"", ""date""))"
"0",""
"0","# Fit a panel data model to assess the impact of the policy change"
"0","panel_model <- plm(Deaths_per_100000 ~ lag(Deaths_per_100000, 1), data = pdata, model = ""within"")"
"0",""
"0","# Summarize the model"
"0","summary(panel_model)"
"1","Oneway (individual) effect "
"1","Within Model"
"1","
"
"1","
Call:
"
"1","plm(formula = Deaths_per_100000 ~ lag(Deaths_per_100000, 1), 
"
"1","    data = pdata, model = ""within"")
"
"1","
"
"1","Balanced Panel: "
"1","n = 3, "
"1","T = 71, "
"1","N = 213
"
"1","
Residuals:
"
"1","      Min. "
"1","   1st Qu. "
"1","    Median "
"1","   3rd Qu. "
"1","      Max. "
"1","
"
"1","-1.6248538 "
"1","-0.2712971 "
"1","-0.0020578 "
"1"," 0.2792598 "
"1"," 1.6153108 "
"1","
"
"1","
Coefficients:
"
"1","                         "
"1"," Estimate"
"1"," Std. Error"
"1"," t-value"
"1","  Pr(>|t|)"
"1","    "
"1","
lag(Deaths_per_100000, 1)"
"1"," 0.921228"
"1","   0.028604"
"1","  32.207"
"1"," < 2.2e-16"
"1"," ***"
"1","
"
"1","---
Signif. codes:  "
"1",""
"1","0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1"
"1","
"
"1","
"
"1","Total Sum of Squares:    301.32
"
"1","Residual Sum of Squares: 50.531
"
"1","R-Squared:      0.8323
"
"1","Adj. R-Squared: 0.82989
"
"1","F-statistic: 1037.27 on 1 and 209 DF, p-value: < 2.22e-16
"
"0","# Robust standard errors for the panel data model"
"0","coeftest(panel_model, vcov = vcovHC(panel_model, type = ""HC1""))"
"1","
t test of coefficients:

"
"1","                         "
"1"," Estimate"
"1"," Std. Error"
"1"," t value"
"1","  Pr(>|t|)"
"1","    "
"1","
lag(Deaths_per_100000, 1)"
"1"," 0.921228"
"1","   0.017173"
"1","  53.644"
"1"," < 2.2e-16"
"1"," ***"
"1","
"
"1","---
Signif. codes:  "
"1",""
"1","0 â€˜***â€™ 0.001 â€˜**â€™ 0.01 â€˜*â€™ 0.05 â€˜.â€™ 0.1 â€˜ â€™ 1"
"1","
"
"1","
"
"0","# Extract the index (State, Date) for the fitted model to align with fitted values"
"0","model_index <- index(panel_model)"
"0",""
"0","# Create a dataframe with fitted values and corresponding index (State, Date)"
"0","fitted_data <- data.frame(State = model_index$State,"
"0","                          date = model_index$date,"
"0","                          Fitted = fitted(panel_model))"
"0",""
"0","# Merge the fitted data with the original panel_data based on State and Date"
"0","panel_data_with_fitted <- merge(panel_data, fitted_data, by = c(""State"", ""date""))"
"0",""
"0","# Plot the panel data model results using ggplot2"
"0","ggplot(panel_data_with_fitted, aes(x = date, y = Deaths_per_100000, color = State)) +"
"0","  geom_point() +"
"0","  geom_line(aes(y = Deaths_per_100000), linetype = ""solid"") +  # Plot actual Deaths_per_100000 as solid line"
"0","  labs(title = ""Panel Data Model Results"","
"0","       x = ""Date"","
"0","       y = ""Deaths_per_100000"","
"0","       color = ""State"") +"
"0","  theme_minimal()"
