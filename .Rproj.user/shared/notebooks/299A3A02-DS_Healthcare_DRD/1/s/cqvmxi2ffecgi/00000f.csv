"0",""
"0","# Filter the data for each complete month in 2018 to 2023 "
"0","Data_monthly <- Data %>%"
"0","  filter(`Month` >= ym(""2018-01"") & `Month` <= ym(""2023-12""))"
"0",""
"0","# Group the data by occurrence state and month, then sum deaths per month"
"0","Data_monthly <- Data_monthly %>%"
"0","  group_by(`Occurrence State`, year = year(`Month`), month = month(`Month`)) %>%"
"0","  summarise(Deaths = sum(Deaths))"
"1","[38;5;232m`summarise()` has grouped output by 'Occurrence State', 'year'. You can override using
the `.groups` argument.[39m
"
"0","# Merge the death data with population data by state and year"
"0","Data_monthly <- Data_monthly %>%"
"0","  left_join(population_data, by = c(""Occurrence State"" = ""State"", ""year"" = ""year""))"
"0",""
"0","# Calculate deaths per 100,000 inhabitants for each year"
"0","Data_monthly <- Data_monthly  %>%"
"0","  mutate(Deaths_per_100000 = (Deaths / population_count) * 100000)"
"0",""
"0",""
"0","# Create 'treatment' and 'post_policy' variables"
"0","Data_monthly <- Data_monthly %>%"
"0","  mutate("
"0","    treatment = ifelse(`Occurrence State` == ""Oregon"", 1, 0),  # 1 for Oregon, 0 for California/Washington"
"0","    post_policy = ifelse(year >= 2021, 1, 0),  # 1 for years 2021 and later"
"0","    interaction = treatment * post_policy  # Interaction term for DiD"
"0","  )"
"0",""
"0","# Create a new date column by combining year and month"
"0","Data_monthly <- Data_monthly %>%"
"0","  mutate(date = ym(paste(year, month, sep = ""-"")))  # Combine year and month into a date"
"0",""
"0",""
"0","# Difference-in-Differences (DiD) regression model with Deaths_per_100000"
"0",""
"0","did_model <- lm(Deaths_per_100000 ~ treatment + post_policy + interaction, data = Data_monthly)"
"0","summary(did_model)"
"1","
Call:
"
"1",""
"1","lm(formula = Deaths_per_100000 ~ treatment + post_policy + interaction, 
    data = Data_monthly)"
"1",""
"1","

"
"1",""
"1","Residuals:
"
"1","    Min "
"1","     1Q "
"1"," Median "
"1","     3Q "
"1","    Max "
"1","
"
"1","-26.312 "
"1","-11.969 "
"1","  0.043 "
"1"," 10.965 "
"1"," 51.093 "
"1","
"
"1","
Coefficients:
"
"1","           "
"1"," Estimate"
"1"," Std. Error"
"1"," t value"
"1"," Pr(>|t|)"
"1","    "
"1","
(Intercept)"
"1","   85.849"
"1","      1.850"
"1","  46.409"
"1","  < 2e-16"
"1"," ***"
"1","
treatment  "
"1","   21.017"
"1","      3.204"
"1","   6.560"
"1"," 4.06e-10"
"1"," ***"
"1","
post_policy"
"1","    9.759"
"1","      2.616"
"1","   3.730"
"1"," 0.000246"
"1"," ***"
"1","
interaction"
"1","    6.033"
"1","      4.531"
"1","   1.332"
"1"," 0.184450"
"1","    "
"1","
"
"1","---
Signif. codes:  "
"1",""
"1","0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
"1","
"
"1","
Residual standard error:"
"1"," "
"1","15.7"
"1"," "
"1","on"
"1"," "
"1","212"
"1"," "
"1","degrees of freedom"
"1","
"
"1","Multiple R-squared: "
"1"," "
"1","0.4056"
"1",",	Adjusted R-squared: "
"1"," "
"1","0.3972"
"1"," "
"1","
F-statistic:"
"1"," "
"1","48.22"
"1"," "
"1","on"
"1"," "
"1","3"
"1"," "
"1","and"
"1"," "
"1","212"
"1"," "
"1","DF,  p-value:"
"1"," "
"1","< 2.2e-16"
"1","
"
"1","
"
"0","# Robust standard errors to handle heteroscedasticity"
"0","coeftest(did_model, vcov = vcovHC(did_model, type = ""HC1""))"
"1","
t test of coefficients:

"
"1","           "
"1"," Estimate"
"1"," Std. Error"
"1"," t value"
"1","  Pr(>|t|)"
"1","    "
"1","
(Intercept)"
"1","  85.8486"
"1","     1.9341"
"1"," 44.3859"
"1"," < 2.2e-16"
"1"," ***"
"1","
treatment  "
"1","  21.0175"
"1","     2.3656"
"1","  8.8847"
"1"," 2.787e-16"
"1"," ***"
"1","
post_policy"
"1","   9.7587"
"1","     3.0059"
"1","  3.2465"
"1","  0.001358"
"1"," ** "
"1","
interaction"
"1","   6.0333"
"1","     3.7358"
"1","  1.6150"
"1","  0.107800"
"1","    "
"1","
"
"1","---
Signif. codes:  "
"1",""
"1","0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
"1","
"
"1","
"
